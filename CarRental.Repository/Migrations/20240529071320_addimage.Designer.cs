// <auto-generated />
using System;
using CarRental.Repository.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarRental.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240529071320_addimage")]
    partial class addimage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarRental.Contract.Repository.Models.AccessTokenEntity", b =>
                {
                    b.Property<DateTime>("ExpireAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("IDUser")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("StrTokenIDToken")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("StrTokenIDToken");

                    b.ToTable("AccessToken");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.ChucVuEntity", b =>
                {
                    b.Property<string>("IDChucVu")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("MucLuongTheoChucVu")
                        .HasColumnType("float");

                    b.Property<double>("PhanTramMuc1")
                        .HasColumnType("float");

                    b.Property<string>("TenChucVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDChucVu");

                    b.ToTable("ChucVu");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.HoaDonKyGuiEntity", b =>
                {
                    b.Property<string>("IDHoaDonKyGui")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HinhThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDHopDongKyGui")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoHoaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoHoaDonThue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TongThanhToan")
                        .HasColumnType("float");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThaiThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDHoaDonKyGui");

                    b.HasIndex("IDHopDongKyGui");

                    b.ToTable("HoaDonKyGui");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.HoaDonThueXeEntity", b =>
                {
                    b.Property<string>("IDHoaDonThueXe")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HinhAnhThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDHopDongThueXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoHoaDon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TongThanhToan")
                        .HasColumnType("float");

                    b.Property<double>("TongThanhToanChuaKM")
                        .HasColumnType("float");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThaiThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDHoaDonThueXe");

                    b.HasIndex("IDHopDongThueXe");

                    b.ToTable("HoaDonThueXe");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.HopDongKyGuiEntity", b =>
                {
                    b.Property<string>("IDHopDongKyGui")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DinhKyThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnhHopDong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayHieuLuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<double>("PhanTramHoaHong")
                        .HasColumnType("float");

                    b.Property<string>("PhuongThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoHopDong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThoiDiemThanhToan")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("XacNhan")
                        .HasColumnType("bit");

                    b.HasKey("IDHopDongKyGui");

                    b.HasIndex("IDKhachHang");

                    b.HasIndex("IDNhanVien");

                    b.HasIndex("IDXe")
                        .IsUnique();

                    b.ToTable("HopDongKyGui");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.HopDongThueXeEntity", b =>
                {
                    b.Property<string>("IDHopDongThueXe")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DinhKyThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GiaThue")
                        .HasColumnType("float");

                    b.Property<string>("HinhAnhHopDong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDKMLoaiKH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDKMLoaiXe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDKMTrenHoaDon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDKMVoucher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayHetHan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayHieuLuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhuongThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoHopDong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SoTienCoc")
                        .HasColumnType("float");

                    b.Property<string>("TenKMLoaiKH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKMLoaiXe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKMVoucher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThoiDiemThanhToan")
                        .HasColumnType("int");

                    b.Property<double>("TienThanhToanTheoDot")
                        .HasColumnType("float");

                    b.Property<double>("TienThanhToanTheoDotChuaKM")
                        .HasColumnType("float");

                    b.Property<double>("TongThanhTienDuKien")
                        .HasColumnType("float");

                    b.Property<double>("TongThanhTienDuKienSauKM")
                        .HasColumnType("float");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("XacNhan")
                        .HasColumnType("bit");

                    b.HasKey("IDHopDongThueXe");

                    b.HasIndex("IDKhachHang");

                    b.HasIndex("IDNhanVien");

                    b.HasIndex("IDXe")
                        .IsUnique();

                    b.ToTable("HopDongThueXe");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.KMLoaiKHEntity", b =>
                {
                    b.Property<string>("IDKhuyenMai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDLoaiKH")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("SoTien")
                        .HasColumnType("float");

                    b.Property<double>("SoTienToiDaDuocGiam")
                        .HasColumnType("float");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TyLePhanTram")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDKhuyenMai");

                    b.HasIndex("IDLoaiKH")
                        .IsUnique();

                    b.ToTable("KMLoaiKH");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.KMLoaiXeEntity", b =>
                {
                    b.Property<string>("IDKhuyenMai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDLoaiXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("SoTien")
                        .HasColumnType("float");

                    b.Property<double>("SoTienToiDaDuocGiam")
                        .HasColumnType("float");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TyLePhanTram")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDKhuyenMai");

                    b.HasIndex("IDLoaiXe")
                        .IsUnique();

                    b.ToTable("KMLoaiXe");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.KMTrenHoaDonEntity", b =>
                {
                    b.Property<string>("IDKhuyenMai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DieuKienApDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<double?>("SoTien")
                        .HasColumnType("float");

                    b.Property<double>("SoTienToiDaDuocGiam")
                        .HasColumnType("float");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TyLePhanTram")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDKhuyenMai");

                    b.ToTable("KMTrenHoaDon");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.KMVoucherEntity", b =>
                {
                    b.Property<string>("IDKhuyenMai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<double?>("SoTien")
                        .HasColumnType("float");

                    b.Property<double>("SoTienToiDaDuocGiam")
                        .HasColumnType("float");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TyLePhanTram")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDKhuyenMai");

                    b.ToTable("KMVoucher");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.KhachHangEntity", b =>
                {
                    b.Property<string>("IDKhachHang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChiNhanhNganHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChiHienTai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChiThuongTru")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPLX")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDLoaiKH")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NganHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgaySinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoaiDuPhong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoaiNguoiThamChieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoPassPort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDKhachHang");

                    b.HasIndex("IDLoaiKH");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.KhuyenMaiEntity", b =>
                {
                    b.Property<string>("IDKhuyenMai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenCTKM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDKhuyenMai");

                    b.ToTable("KhuyenMai");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.LichXeEntity", b =>
                {
                    b.Property<string>("IDLichXe")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDLichXe");

                    b.HasIndex("IDXe");

                    b.ToTable("LichXe");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.LoaiKhachHangEntity", b =>
                {
                    b.Property<string>("IDLoaiKH")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenLoaiKH")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDLoaiKH");

                    b.ToTable("LoaiKhachHang");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.LoaiXeEntity", b =>
                {
                    b.Property<string>("IDLoaiXe")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("GiaThue")
                        .HasColumnType("float");

                    b.Property<string>("TenLoaiXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDLoaiXe");

                    b.ToTable("LoaiXe");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.LoginEntity", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("Login");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.NhacHenEntity", b =>
                {
                    b.Property<string>("IDNhacHen")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DinhKyNhacHen")
                        .HasColumnType("int");

                    b.Property<string>("NDNhacHen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDNhacHen");

                    b.ToTable("NhacHen");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.NhanVienEntity", b =>
                {
                    b.Property<string>("IDNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChiNhanhNganHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HeSoLuong")
                        .HasColumnType("float");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDChucVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDPhongBan")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NganHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayNghiViec")
                        .HasColumnType("datetime2");

                    b.Property<string>("NgaySinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayVaoLam")
                        .HasColumnType("datetime2");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDNhanVien");

                    b.HasIndex("IDChucVu");

                    b.HasIndex("IDPhongBan");

                    b.ToTable("NhanVien");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.PermissionDetailEntity", b =>
                {
                    b.Property<string>("IDPermissionDetail")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CheckAction")
                        .HasColumnType("int");

                    b.Property<string>("IDPermission")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDPermissionDetail");

                    b.HasIndex("IDPermission");

                    b.ToTable("PermissionDetail");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.PermissionEntity", b =>
                {
                    b.Property<string>("IDPermission")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PermissionGroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDPermission");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.PhongBanEntity", b =>
                {
                    b.Property<string>("IDPhongBan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("PhanTramMuc1")
                        .HasColumnType("float");

                    b.Property<double>("PhanTramMuc2")
                        .HasColumnType("float");

                    b.Property<double>("PhanTramMuc3")
                        .HasColumnType("float");

                    b.Property<double>("PhanTramMuc4")
                        .HasColumnType("float");

                    b.Property<string>("TenPhongBan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDPhongBan");

                    b.ToTable("PhongBan");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.QuanLyChuyenKhoanEntity", b =>
                {
                    b.Property<string>("IDQuanLyCK")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NDChuyenKhoanCoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NDChuyenKhoanKyGui")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NDChuyenKhoanThue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDQuanLyCK");

                    b.ToTable("QuanLyChuyenKhoan");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.RefreshTokenEntity", b =>
                {
                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDUser")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ExpireAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("JwtID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrTokenIDToken")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Token", "IDUser");

                    b.HasIndex("StrTokenIDToken");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.RoomEntity", b =>
                {
                    b.Property<string>("IDRoom")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ThoiGianRoom")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDRoom");

                    b.HasIndex("IDKhachHang");

                    b.HasIndex("IDNhanVien");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.SoDienThoaiEntity", b =>
                {
                    b.Property<string>("DauSo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DauSo");

                    b.ToTable("SoDienThoai");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.ThamDinhXeEntity", b =>
                {
                    b.Property<string>("IDThamDinh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BienBanThamDinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeThongDongCo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeThongPhanh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HeThongTreo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDKhachHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayThamDinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDungHoSoXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenThamDinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhTrangNgoaiThat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhTrangNoiThat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDThamDinh");

                    b.HasIndex("IDNhanVien");

                    b.ToTable("ThamDinhXe");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.ThanhLyHopDongEntity", b =>
                {
                    b.Property<string>("IDThanhLy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayThanhLy")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenThanhLy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("XacNhanCuaAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("XacNhanThamDinh")
                        .HasColumnType("bit");

                    b.HasKey("IDThanhLy");

                    b.HasIndex("IDNhanVien");

                    b.ToTable("ThanhLyHopDong");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.TienNghiEntity", b =>
                {
                    b.Property<string>("IDTienNghi")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenTienNghi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDTienNghi");

                    b.ToTable("TienNghi");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.TinTucEntity", b =>
                {
                    b.Property<string>("IDTinTuc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiTao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDTinTuc");

                    b.ToTable("TinTuc");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.TokenEntity", b =>
                {
                    b.Property<string>("IDToken")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDToken");

                    b.ToTable("Token");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.TrangThaiBaoDuongEntity", b =>
                {
                    b.Property<string>("IDTrangThaiBD")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HinhAnhHoaDonBD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NDBaoDuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayBaoDuong")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDTrangThaiBD");

                    b.HasIndex("IDXe");

                    b.ToTable("TrangThaiBaoDuong");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.UserEntity", b =>
                {
                    b.Property<string>("IDUser")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDUser");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.UserPermissionEntity", b =>
                {
                    b.Property<string>("IDUser")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDPermission")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDUser", "IDPermission");

                    b.HasIndex("IDPermission");

                    b.ToTable("UserPermission");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.XeEntity", b =>
                {
                    b.Property<string>("IDXe")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BienSoXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GiaThue")
                        .HasColumnType("float");

                    b.Property<string>("HangXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDLoaiXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NamSanXuat")
                        .HasColumnType("int");

                    b.Property<string>("NguyenLieuTieuHao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhienLieu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoChoNgoi")
                        .HasColumnType("int");

                    b.Property<string>("TenXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruyenDong")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDXe");

                    b.HasIndex("IDLoaiXe");

                    b.ToTable("Xe");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.XeTienNghiEntity", b =>
                {
                    b.Property<string>("IDXe")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IDTienNghi")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDXe", "IDTienNghi");

                    b.HasIndex("IDTienNghi");

                    b.ToTable("XeTienNghi");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.AccessTokenEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.TokenEntity", "StrToken")
                        .WithMany()
                        .HasForeignKey("StrTokenIDToken");

                    b.Navigation("StrToken");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.HoaDonKyGuiEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.HopDongKyGuiEntity", "HopDongKyGuis")
                        .WithMany("HoaDonKyGuis")
                        .HasForeignKey("IDHopDongKyGui")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HopDongKyGuis");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.HoaDonThueXeEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.HopDongThueXeEntity", "HopDongThueXes")
                        .WithMany("HoaDonThueXes")
                        .HasForeignKey("IDHopDongThueXe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HopDongThueXes");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.HopDongKyGuiEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.KhachHangEntity", "KhachHangs")
                        .WithMany("HopDongKyGuis")
                        .HasForeignKey("IDKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Contract.Repository.Models.NhanVienEntity", "NhanViens")
                        .WithMany("HopDongKyGuis")
                        .HasForeignKey("IDNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Contract.Repository.Models.XeEntity", "Xes")
                        .WithOne("HopDongKyGuis")
                        .HasForeignKey("CarRental.Contract.Repository.Models.HopDongKyGuiEntity", "IDXe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHangs");

                    b.Navigation("NhanViens");

                    b.Navigation("Xes");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.HopDongThueXeEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.KhachHangEntity", "KhachHangs")
                        .WithMany("HopDongThueXes")
                        .HasForeignKey("IDKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Contract.Repository.Models.NhanVienEntity", "NhanViens")
                        .WithMany("HopDongThueXes")
                        .HasForeignKey("IDNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Contract.Repository.Models.XeEntity", "Xes")
                        .WithOne("HopDongThueXes")
                        .HasForeignKey("CarRental.Contract.Repository.Models.HopDongThueXeEntity", "IDXe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHangs");

                    b.Navigation("NhanViens");

                    b.Navigation("Xes");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.KMLoaiKHEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.KhuyenMaiEntity", "KhuyenMais")
                        .WithMany("KMLoaiKHs")
                        .HasForeignKey("IDKhuyenMai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Contract.Repository.Models.LoaiKhachHangEntity", "LoaiKhachHangs")
                        .WithOne("KMLoaiKHs")
                        .HasForeignKey("CarRental.Contract.Repository.Models.KMLoaiKHEntity", "IDLoaiKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhuyenMais");

                    b.Navigation("LoaiKhachHangs");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.KMLoaiXeEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.KhuyenMaiEntity", "KhuyenMais")
                        .WithMany("KMLoaiXes")
                        .HasForeignKey("IDKhuyenMai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Contract.Repository.Models.LoaiXeEntity", "LoaiXes")
                        .WithOne("KMLoaiXes")
                        .HasForeignKey("CarRental.Contract.Repository.Models.KMLoaiXeEntity", "IDLoaiXe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhuyenMais");

                    b.Navigation("LoaiXes");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.KMTrenHoaDonEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.KhuyenMaiEntity", "KhuyenMais")
                        .WithMany("KMTrenHoaDons")
                        .HasForeignKey("IDKhuyenMai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhuyenMais");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.KMVoucherEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.KhuyenMaiEntity", "KhuyenMais")
                        .WithMany("KMVouchers")
                        .HasForeignKey("IDKhuyenMai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhuyenMais");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.KhachHangEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.LoaiKhachHangEntity", "LoaiKhachHangs")
                        .WithMany("KhachHangs")
                        .HasForeignKey("IDLoaiKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiKhachHangs");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.LichXeEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.XeEntity", "Xes")
                        .WithMany("LichXes")
                        .HasForeignKey("IDXe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Xes");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.NhanVienEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.ChucVuEntity", "ChucVus")
                        .WithMany("NhanViens")
                        .HasForeignKey("IDChucVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Contract.Repository.Models.PhongBanEntity", "PhongBans")
                        .WithMany("NhanViens")
                        .HasForeignKey("IDPhongBan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChucVus");

                    b.Navigation("PhongBans");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.PermissionDetailEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.PermissionEntity", "Permissions")
                        .WithMany("PermissionDetails")
                        .HasForeignKey("IDPermission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.RefreshTokenEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.TokenEntity", "StrToken")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("StrTokenIDToken");

                    b.Navigation("StrToken");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.RoomEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.KhachHangEntity", "KhachHangs")
                        .WithMany("Rooms")
                        .HasForeignKey("IDKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Contract.Repository.Models.NhanVienEntity", "NhanViens")
                        .WithMany("Rooms")
                        .HasForeignKey("IDNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHangs");

                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.ThamDinhXeEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.NhanVienEntity", "NhanViens")
                        .WithMany("ThamDinhXes")
                        .HasForeignKey("IDNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.ThanhLyHopDongEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.NhanVienEntity", "NhanViens")
                        .WithMany("ThanhLyHopDongs")
                        .HasForeignKey("IDNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.TrangThaiBaoDuongEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.XeEntity", "Xes")
                        .WithMany("TrangThaiBaoDuongs")
                        .HasForeignKey("IDXe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Xes");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.UserPermissionEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.PermissionEntity", "Permissions")
                        .WithMany("UserPermissions")
                        .HasForeignKey("IDPermission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Contract.Repository.Models.UserEntity", "Users")
                        .WithMany("UserPermissions")
                        .HasForeignKey("IDUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permissions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.XeEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.LoaiXeEntity", "LoaiXes")
                        .WithMany("Xes")
                        .HasForeignKey("IDLoaiXe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiXes");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.XeTienNghiEntity", b =>
                {
                    b.HasOne("CarRental.Contract.Repository.Models.TienNghiEntity", "TienNghis")
                        .WithMany("XeTienNghis")
                        .HasForeignKey("IDTienNghi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Contract.Repository.Models.XeEntity", "Xes")
                        .WithMany("XeTienNghis")
                        .HasForeignKey("IDXe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TienNghis");

                    b.Navigation("Xes");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.ChucVuEntity", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.HopDongKyGuiEntity", b =>
                {
                    b.Navigation("HoaDonKyGuis");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.HopDongThueXeEntity", b =>
                {
                    b.Navigation("HoaDonThueXes");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.KhachHangEntity", b =>
                {
                    b.Navigation("HopDongKyGuis");

                    b.Navigation("HopDongThueXes");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.KhuyenMaiEntity", b =>
                {
                    b.Navigation("KMLoaiKHs");

                    b.Navigation("KMLoaiXes");

                    b.Navigation("KMTrenHoaDons");

                    b.Navigation("KMVouchers");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.LoaiKhachHangEntity", b =>
                {
                    b.Navigation("KMLoaiKHs")
                        .IsRequired();

                    b.Navigation("KhachHangs");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.LoaiXeEntity", b =>
                {
                    b.Navigation("KMLoaiXes");

                    b.Navigation("Xes");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.NhanVienEntity", b =>
                {
                    b.Navigation("HopDongKyGuis");

                    b.Navigation("HopDongThueXes");

                    b.Navigation("Rooms");

                    b.Navigation("ThamDinhXes");

                    b.Navigation("ThanhLyHopDongs");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.PermissionEntity", b =>
                {
                    b.Navigation("PermissionDetails");

                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.PhongBanEntity", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.TienNghiEntity", b =>
                {
                    b.Navigation("XeTienNghis");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.TokenEntity", b =>
                {
                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.UserEntity", b =>
                {
                    b.Navigation("UserPermissions");
                });

            modelBuilder.Entity("CarRental.Contract.Repository.Models.XeEntity", b =>
                {
                    b.Navigation("HopDongKyGuis")
                        .IsRequired();

                    b.Navigation("HopDongThueXes")
                        .IsRequired();

                    b.Navigation("LichXes");

                    b.Navigation("TrangThaiBaoDuongs");

                    b.Navigation("XeTienNghis");
                });
#pragma warning restore 612, 618
        }
    }
}
